apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount | quote }}
  namespace: {{ .Values.namespaces.cluster | quote }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: {{ .Values.serviceAccount | quote }}
  namespace: {{ .Values.namespaces.cluster | quote }}
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: [ "get", "list", "watch", "create", "update", "delete" ]
---
# Allow the operator to create resources in this cluster's namespace
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: rook-ceph-cluster-mgmt
  namespace: {{ .Values.namespaces.cluster | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-ceph-cluster-mgmt
subjects:
- kind: ServiceAccount
  name: {{ .Values.namespaces.operator | quote }}
  namespace: {{ .Values.namespaces.operator | quote }}
---
# Allow the pods in this namespace to work with configmaps
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: {{ .Values.serviceAccount | quote }}
  namespace: {{ .Values.namespaces.cluster | quote }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.serviceAccount | quote }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.serviceAccount | quote }}
  namespace: {{ .Values.namespaces.cluster | quote }}
---
apiVersion: ceph.rook.io/v1alpha1
kind: Cluster
metadata:
  name: rook-ceph
  namespace: {{ .Values.namespaces.cluster | quote }}
spec:
  # The path on the host where configuration files will be persisted. If not specified, a kubernetes emptyDir will be created (not recommended).
  # Important: if you reinstall the cluster, make sure you delete this directory from each host or else the mons will fail to start on the new cluster.
  # In Minikube, the '/data' directory is configured to persist across reboots. Use "/data/rook" in Minikube environment.
  dataDirHostPath: /var/lib/rook
  # The service account under which to run the daemon pods in this cluster if the default account is not sufficient (OSDs)
  serviceAccount: {{ .Values.serviceAccount | quote }}
  # set the amount of mons to be started
  mon:
    count: {{ .Values.replicaCount.mon }}
    allowMultiplePerNode: true
  # enable the ceph dashboard for viewing cluster status
  dashboard:
    enabled: true
  network:
    # toggle to use hostNetwork
    hostNetwork: false
  # To control where various services will be scheduled by kubernetes, use the placement configuration sections below.
  # The example under 'all' would have all services scheduled on kubernetes nodes labeled with 'role=storage' and
  # tolerate taints with a key of 'storage-node'.
  placement:
   all:
     nodeAffinity:
       requiredDuringSchedulingIgnoredDuringExecution:
         nodeSelectorTerms:
         - matchExpressions:
           - key: {{ .Values.nodeSelector.all.key | quote }}
             operator: In
             values:
             - {{ .Values.nodeSelector.all.value | quote }}
     podAffinity:
     podAntiAffinity:
     tolerations:
     - key: storage-node
       operator: Exists
# The above placement information can also be specified for mon, osd, and mgr components
#    mon:
#    osd:
#    mgr:
  resources:
# The requests and limits set here, allow the mgr pod to use half of one CPU core and 1 gigabyte of memory
   mgr:
     limits:
       cpu: "500m"
       memory: "1024Mi"
     requests:
       cpu: "500m"
       memory: "1024Mi"
# The above example requests/limits can also be added to the mon and osd components
#    mon:
#    osd:
  storage: # cluster level storage configuration and selection
    useAllNodes: true
    useAllDevices: false
    deviceFilter:
    location:
    config:
      # The default and recommended storeType is dynamically set to bluestore for devices and filestore for directories.
      # Set the storeType explicitly only if it is required not to use the default.
      # storeType: bluestore
      databaseSizeMB: "1024" # this value can be removed for environments with normal sized disks (100 GB or larger)
      journalSizeMB: "1024"  # this value can be removed for environments with normal sized disks (20 GB or larger)
# Cluster level list of directories to use for storage. These values will be set for all nodes that have no `directories` set.
    directories:
      - path: /var/lib/ceph/osd/ceph-sdc
      - path: /var/lib/ceph/osd/ceph-sdd
      - path: /var/lib/ceph/osd/ceph-sde
      - path: /var/lib/ceph/osd/ceph-sdf
      - path: /var/lib/ceph/osd/ceph-sdg
      - path: /var/lib/ceph/osd/ceph-sdh
      - path: /var/lib/ceph/osd/ceph-sdi
      - path: /var/lib/ceph/osd/ceph-sdj
      - path: /var/lib/ceph/osd/ceph-sdk
# Individual nodes and their config can be specified as well, but 'useAllNodes' above must be set to false. Then, only the named
# nodes below will be used as storage resources.  Each node's 'name' field should match their 'kubernetes.io/hostname' label.
#    nodes:
#    - name: "172.17.4.101"
#      directories: # specific directories to use for storage can be specified for each node
#      - path: "/rook/storage-dir"
#      resources:
#        limits:
#          cpu: "500m"
#          memory: "1024Mi"
#        requests:
#          cpu: "500m"
#          memory: "1024Mi"
#    - name: "172.17.4.201"
#      devices: # specific devices to use for storage can be specified for each node
#      - name: "sdb"
#      - name: "sdc"
#      config: # configuration can be specified at the node level which overrides the cluster level config
#        storeType: filestore
#    - name: "172.17.4.301"
#      deviceFilter: "^sd."